using System;
using System.Collections.Generic;
using System.Data;
using System.Data.Entity;
using System.Linq;
using System.Net;
using System.Web;
using System.Web.Mvc;
using FYPInitial.Models;

//Controller for service history, base code generated by ASP.NET MVC framework.
namespace FYPInitial.Controllers
{
    public class ServiceHistoryController : Controller
    {
        private DBModels db = new DBModels();

        // GET: ServiceHistory
        public ViewResult Index(string searchString)
        {
            //Logic to search service history 
            if (!String.IsNullOrEmpty(searchString))
            {
                var services = from s in db.servicehistories
                               select s;

                services = services.Where(s => s.Eircode.Equals(searchString)
                                          || s.Address.Equals(searchString));

                return View(services.ToList());
            }
     
            return View();
        }

        //GET: ServiceHistory/Details/
        public ActionResult Details(int? apptId)
        {
            //Return page populated with service details based on appointment ID
            if (apptId == null)
            {
                return new HttpStatusCodeResult(HttpStatusCode.BadRequest);
            }
            servicehistory servicehistory = db.servicehistories.SingleOrDefault(m => m.AppointmentID == apptId);
            if (servicehistory == null)
            {
                return HttpNotFound();
            }
            return View(servicehistory);
        }

        // GET: ServiceHistory/Create
        public ActionResult Create()
        {
            //Not currently used
            return View();
        }

        // POST: ServiceHistory/Create
        // To protect from overposting attacks, please enable the specific properties you want to bind to, for 
        // more details see https://go.microsoft.com/fwlink/?LinkId=317598.
        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult Create([Bind(Include = "AppointmentID,EmployeeID,EmployeeName,CustomerID,Address,Eircode,Start,End,Description")] servicehistory servicehistory)
        {
            //Not currently used

            //if (ModelState.IsValid)
            //{
            //    db.servicehistories.Add(servicehistory);
            //    db.SaveChanges();
            //    return RedirectToAction("Index");
            //}

            return View(servicehistory);
        }

        // GET: ServiceHistory/Edit/5
        public ActionResult Edit(int? id)
        {
            if (id == null)
            {
                return new HttpStatusCodeResult(HttpStatusCode.BadRequest);
            }
            servicehistory servicehistory = db.servicehistories.Find(id);
            if (servicehistory == null)
            {
                return HttpNotFound();
            }
            return View(servicehistory);
        }

        // POST: ServiceHistory/Edit/5
        // To protect from overposting attacks, please enable the specific properties you want to bind to, for 
        // more details see https://go.microsoft.com/fwlink/?LinkId=317598.
        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult Edit([Bind(Include = "AppointmentID,EmployeeID,EmployeeName,CustomerID,Address,Eircode,Start,End,Description")] servicehistory servicehistory)
        {
            if (ModelState.IsValid)
            {
                db.Entry(servicehistory).State = EntityState.Modified;
                db.SaveChanges();
                return RedirectToAction("Index");
            }
            return View(servicehistory);
        }

        // GET: ServiceHistory/Delete/5
        public ActionResult Delete(int? id)
        {
            if (id == null)
            {
                return new HttpStatusCodeResult(HttpStatusCode.BadRequest);
            }
            servicehistory servicehistory = db.servicehistories.Find(id);
            if (servicehistory == null)
            {
                return HttpNotFound();
            }
            return View(servicehistory);
        }

        // POST: ServiceHistory/Delete/5
        [HttpPost, ActionName("Delete")]
        [ValidateAntiForgeryToken]
        public ActionResult DeleteConfirmed(int id)
        {
            servicehistory servicehistory = db.servicehistories.Find(id);
            db.servicehistories.Remove(servicehistory);
            db.SaveChanges();
            return RedirectToAction("Index");
        }

        protected override void Dispose(bool disposing)
        {
            if (disposing)
            {
                db.Dispose();
            }
            base.Dispose(disposing);
        }
    }
}
